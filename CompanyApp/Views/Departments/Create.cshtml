@model CompanyApp.Models.Department

@{
    ViewData["Title"] = Model == null? "Create": "Edit";
}

<h1>@ViewData["Title"] Department</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="@ViewData["Title"]">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (ViewBag.Massege != null)
            {
                <h5 class="alert alert-warning">@ViewBag.Massege</h5>
            }
            <div class="form-group">
                <label asp-for="DepartmentId" class="control-label"></label>
                <input readonly asp-for="DepartmentId" class="form-control" />
                <span asp-validation-for="DepartmentId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DepartmentName" class="control-label"></label>
                <input asp-for="DepartmentName" class="form-control" />
                <span asp-validation-for="DepartmentName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DepartmentAbbreviation" class="control-label"></label>
                <input asp-for="DepartmentAbbreviation" class="form-control" />
                <span asp-validation-for="DepartmentAbbreviation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="@ViewData["Title"]" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
